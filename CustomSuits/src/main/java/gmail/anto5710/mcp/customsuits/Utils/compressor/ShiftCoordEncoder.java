package gmail.anto5710.mcp.customsuits.Utils.compressor;

public class ShiftCoordEncoder extends CoordEncodingAdaptor{
	private static double shifter = Math.pow(10, -8);
	String name = "소수점 일관이동방식";
	/**
	 * Returns a Double compression of a 2D Integer coordinate by shifting appropriate decimal digits of the latter, y.<br>
	 * The compressed code is generated by the formula <b><i>x</i> + "" + (± 10<i>y</i> + <i>a</i>)</b> so that its absolute value will always add up.<br>
	 * The auxiliary variable <b><i>a</i></b> represents y's sign, such that:   
	 * <ul>
	 * 	<li> y = 0 → a = 0  
	 * 	<li> y < 0 → a = 1
	 * 	<li> y > 0 → a = 2
	 * </ul>
	 * @param x X block coordinate 
	 * @param y Y block coordinate
	 * @return Single double representation of the coordinate  
	 */
	public double encodeDouble(int x, int y) {
		if(y == 0) {return x;}
		if(y<0) {
			return x<0? x-(-y*10+1)*shifter:x+(-y*10+1)*shifter; 
		}
		return x<0?x-(y*10+2)*shifter:x+(y*10+2)*shifter;
	}
		
	private static double cogC = Math.pow(10, -7);
	public double encodeScaled(int i, int v) {
		if(v == 0) {return i;}		
		if(v<0) {
			return i<0? i-(-v*10+1)*cogC:i+(-v*10+1)*cogC; 
		}
		return i<0?i-(v*10+2)*cogC:i+(v*10+2)*cogC;
	}
	@Override
	public Object encode(int x, int y) {
		return encodeDouble(x, y);
	}
}
